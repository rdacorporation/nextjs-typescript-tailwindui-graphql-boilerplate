name: App CD

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'App/**'
      - '!App/README.md'
      - '!App/docs/**'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}-app
  
jobs:
  docker:
    runs-on: ubuntu-latest
    env:
      working-directory: ./App
      cache-key: myapp-app-cd

    defaults:
      run:
        shell: bash
        working-directory: ${{ env.working-directory }}

    steps:
      -
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          flavor: |
            latest=auto
            prefix=
            suffix=
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=ref,event=tag
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}
      -
        name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-${{ env.cache-key }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-key }}-buildx-
      # Uncomment the below if publishing to Docker Hub. Specify the DOCKER_HUB_USERNAME/DOCKER_HUB_ACCESS_TOKEN as org/repo secrets
      # -
      #   name: Login to DockerHub
      #   uses: docker/login-action@v1 
      #   with:
      #     username: ${{ secrets.DOCKER_HUB_USERNAME }}
      #     password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      -
        name: Log in to the Container registry
        uses: docker/login-action@6af3c118c8376c675363897acf1757f7a9be6583
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ${{ env.working-directory }}
          # If building for other platforms, such as linux/arm64, specify those platforms here as a comma-separated list
          platforms: linux/amd64
          file:  ${{ env.working-directory }}/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      -
        name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
      
      # Uncomment the below to enable CI/CD via a webhook
      # -
      #   name: Trigger CD
      #   run: |
      #     curl --fail "<URL TO TRIGGER CI/CD>" -H "" -d ""